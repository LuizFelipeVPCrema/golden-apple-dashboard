version: '3.8'

services:
  postgres:
    image: postgres:15
    container_name: postgres
    restart: always
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - ./data:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - backend_net
  
  backend:
    build: ./backend
    container_name: mc-backend
    restart: always
    environment:
      - DB_HOST=${DB_HOST}
      - DB_USER=${DB_USER}
      - DB_PASS=${DB_PASS}
      - DB_NAME=${DB_NAME}
    depends_on:
      - postgres
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./minecraft-data:/minecraft-data
    networks:
      - backend_net
      - minecraft_net
    
  frontend:
    build:
      context: ./frontend
      args:
        ENV: development # "production" para alterar para modo produção
    container_name: mc-frontend
    volumes:  
      - ./frontend/minecraft-dashboard:/app
    restart: always
    depends_on:
      - backend
    ports:
      - "4200:4200"
    networks:
      - frontend_net
      - minecraft_net
  
  proxy:
    image: nginx:alpine
    container_name: nginx-proxy
    ports:
      - "80:80"
    volumes:
      - ./proxy/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - frontend
      - backend
    networks:
      - frontend_net
      - backend_net
      - minecraft_net
  minecraft-server:
    image: itzg/minecraft-server
    container_name: minecraft-server
    restart: always
    environment:
      - EULA=TRUE
      - VERSION=1.19
      - ONLINE_MODE=FALSE
    ports:
      - "25566:25566"

    networks:
      - minecraft_net
  velocity:
    image: itzg/mc-proxy
    environment:
      TYPE: VELOCITY
      VELOCITY_VERSION: ${VELOCITY_VERSION}
      SERVER_PORT: ${SERVER_PORT}
      REPLACE_ENV_VARIABLES: "TRUE"
      CFG_SERVERS_SURVIVAL_ADDRESS: ${CFG_SERVERS_SURVIVAL_ADDRESS}
    ports:
      - "25565:25577"
    volumes:
      - ./proxy/config:/config
      - proxy-data:/server
    depends_on:
      - minecraft-server
    networks:
      - minecraft_net

volumes:
  mc-data:
  proxy-data:

networks:
  frontend_net:
    name: frontend_net
  backend_net:
    name: backend_net
  minecraft_net:
    name: minecraft_net

